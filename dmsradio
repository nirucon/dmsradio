#!/usr/bin/env bash
#
# Script name: dmsradio
# Description: Play Swedish national radio (SR) with mpv
# Contributors: Nicklas Rudolfsson
# Note: P4 is P4 VÃ¤st in this case

# bugs discover
set -euo pipefail

# options
declare -a options=(
"P1"
"P2"
"P3"
"P4-V"
"Ekot-direkt"
"Kill-mpv"
"Quit"
)

_out(){
    ${_out} "dmsradio" "$@"
}

# array into dmenu
# "printf '%s\n'" to format the array one item to a line
choice=$(printf '%s\n' "${options[@]}" | dmenu -i -p 'Radio control:' "${@}")

# what to do with the options
case $choice in
    'P1')
        if [[ "$(echo -e "No\nPlay" | dmenu -i -p "${choice}?" "${@}" )" == "Play" ]]; then
            mpv https://sverigesradio.se/topsy/direkt/132-hi-mp3.m3u
        else
            output "User chose not to play." && exit 0
        fi
        ;;
    'P2')
        if [[ "$(echo -e "No\nPlay" | dmenu -i -p "${choice}?" "${@}" )" == "Play" ]]; then
            mpv https://sverigesradio.se/topsy/direkt/2562-hi-mp3.m3u
        else
            output "User chose not to play." && exit 0
        fi
        ;;
    'P3')
        if [[ "$(echo -e "No\nPlay" | dmenu -i -p "${choice}?" "${@}" )" == "Play" ]]; then
            mpv https://sverigesradio.se/topsy/direkt/164-hi-mp3.m3u
        else
            output "User chose not to play." && exit 0
        fi
        ;;
    'P4-V')
        if [[ "$(echo -e "No\nPlay" | dmenu -i -p "${choice}?" "${@}" )" == "Play" ]]; then
            mpv https://sverigesradio.se/topsy/direkt/219-hi-mp3.m3u
        else
            output "User chose not to play." && exit 0
        fi
        ;;
    'Ekot-direkt')
        if [[ "$(echo -e "No\nPlay" | dmenu -i -p "${choice}?" "${@}" )" == "Play" ]]; then
            mpv https://sverigesradio.se/topsy/direkt/4540-hi-mp3.m3u
        else
            output "User chose not to play." && exit 0
        fi
        ;;
    'Kill-mpv')
        if [[ "$(echo -e "No\nKill" | dmenu -i -p "${choice}?" "${@}" )" == "Kill" ]]; then
            killall mpv
        else
            output "User chose not to kill." && exit 0
        fi
        ;;
    'Quit')
        output "Program terminated." && exit 0
    ;;
    # common practice to use the wildcard asterisk symbol (*) as a final
    # pattern to define the default case. This pattern will always match
    *)
        exit 0
    ;;
esac
